workflows:
    version: 2
    build_test_deploy:
        jobs:
            - build_dev:
                filters:
                    branches:
                        only: dev

            - test_dev:
                filters:
                    branches:
                        only: dev
                requires:
                    - build_dev

            - deploy:
                filters:
                    branches:
                        only: dev
                requires:
                    - test_dev

            # - deploy_stage

version: 2
jobs:
    build_dev:
        working_directory: ~/springboot
        # executer: docker, linux VM, mac VM
        docker:
            - image: circleci/openjdk:8-jdk    # primary image 8-jdk-browsers
              # TEST_DATABASE_URL: postgresql://root@localhost/circle_test?sslmode=disable
          # - image: circleci/postgres:9-alpine
          #   environment:
          #     POSTGRES_USER: postgres
          #     POSTGRES_DB: circle_test
          #     POSTGRES_PASSWORD: ""

        # build steps
        steps:
            - checkout

            ## Robotframework environment setup
            - run: sudo apt install python3 python3-pip
            #- run: python3 -m pip install --user pipenv
            # - run: pipenv --version
            # - run: pipenv --python 3.5
            # - run: pipenv shell
            - run: sudo pip3 install virtualenv
            - run: virtualenv -p python3 venv
            - run: source venv/bin/activate
            - run: ls -la
            - run: pip3 install -r requirements.txt
            - run: pip3 freeze > pip.lock
            - run: deactivate


            # Download and cache dependencies
            - restore_cache:
                keys:
                - javadependencies-{{ checksum "build.gradle" }}
                # fallback to using the latest cache if no exact match is found
                - javadependencies-

            - restore_cache:
                keys:
                - pythodependencies-{{ checksum "pip.lock" }}
                - pythodependencies-

            #- run: gradle dependencies    # listet sie nur! kein download!

            - save_cache:
                paths:
                    - ~/springboot/.gradle
                key: javadependencies-{{ checksum "build.gradle" }}

            - save_cache:
                paths:
                    - ~/springboot/venv
                key: pythodependencies-{{ checksum "pip.lock" }}

            # Compile code and run unit tests

            - run:
                name: Run Unit Tests
                command: gradle test

            - store_test_results:
                path: ~/springboot/build/test-results/test
                # index.html hast some interessting reports
                # think about uploading this files to a http server

            - persist_to_workspace:
                root: ~/springboot
                paths:
                    - ./*

    test_dev:
        working_directory: ~/springboot
        docker:
            - image: circleci/openjdk:8-jdk
              environment:
                  DOCKERIZE_VERSION: v0.6.1

        steps:
            - attach_workspace:
                at: ~/springboot

            # Run application and execute integration tests
            - run:
                name: Run Application
                command: gradle bootRun
                # no_output_timeout: 1m
                background: true

            # - run:
            #     name: install dockerize    # need this to enable waiting for Webserver
            #     command: |
            #         wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            #         tar -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            #         rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz

            - run:
                name: Wait for Application to start
                command: dockerize -wait http://localhost:8080 -timeout 1m

            # ROBOTFRAMEWORK TESTS
            - run:
                name: Run Integration Tests
                command: |
                    source venv/bin/activate
                    robot -d ./build/test-results/robot src/tests/robot/API.robot

            - run: curl localhost:8080    # should return Hello World
                # here will be actual robot tests - API, GUI

            - store_test_results:
                path: ~/springboot/build/test-results/test
            - store_test_results:
                path: ~/springboot/build/test-results/robot

            - persist_to_workspace:
                root: ~/springboot
                paths:
                    - ./*

            # Clean Up
            # - run: gradle clean

    deploy:
        working_directory: ~/springboot
        docker:
            - image: circleci/openjdk:8-jdk
        steps:
            - attach_workspace:
                at: ~/springboot

            - run:
                name: Package Jar/War files and deploy
                command: |
                    gradle bootJar
                # gradle bootWar

            - store_artifacts:
                path: ~/springboot/build/libs
            - store_artifacts:
                path: ~/springboot/build/reports/tests/test
            - store_artifacts:
                path: ~/springboot/build/test-results/robot
