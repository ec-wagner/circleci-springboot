workflows:
    version: 2
    build_test_deploy:
        jobs:
            - build_dev:
                filters:
                    branches:
                        only: dev

            - test_dev:
                filters:
                    branches:
                        only: dev
                requires:
                    - build

            # - deploy_stage

version: 2
jobs:
    build:
        working_directory: ~/springboot
        # executer: docker, linux VM, mac VM
        docker:
            - image: circleci/openjdk:8-jdk    # primary image 8-jdk-browsers
              # TEST_DATABASE_URL: postgresql://root@localhost/circle_test?sslmode=disable
          # - image: circleci/postgres:9-alpine
          #   environment:
          #     POSTGRES_USER: postgres
          #     POSTGRES_DB: circle_test
          #     POSTGRES_PASSWORD: ""

        # build steps
        steps:
            - checkout

            # Download and cache dependencies
            - restore_cache:
                keys:
                - dependencies-{{ checksum "build.gradle" }}
                # fallback to using the latest cache if no exact match is found
                - dependencies-

            #- run: gradle dependencies    # listet sie nur! kein download!

            - save_cache:
                paths:
                    - ~/springboot/.gradle
                key: dependencies-{{ checksum "build.gradle" }}

            # Compile code and run unit tests
            - run: gradle test

            - store_test_results:
                path: ~/springboot/build/test-results/test
                # index.html hast some interessting reports
                # think about uploading this files to a http server

            # Run application and execute integration tests
            - run:
                name: Run Application
                command: gradle bootRun
                # no_output_timeout: 1m
                background: true

            # - run: curl localhost:8080    # should return Hello World
            # here will be actual robot tests - API, GUI

            # Package Jar/War files and deploy
            - run: gradle bootJar
            # - run: gradle bootWar
            - store_artifacts:
                path: ~/springboot/build/libs
            - store_artifacts:
                path: ~/springboot/build/reports/tests/test

            # Clean Up
            # - run: gradle clean
    test_dev:
        working_directory: ~/springboot
        docker:
            - image: busybox
              environment:
                  POSTGRES_DB: circle_test

        steps:
            - run: echo "HELLO JAVA"
